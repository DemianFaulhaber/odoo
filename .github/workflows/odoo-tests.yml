name: Run only custom-addon tests

on:
  pull_request:
    branches: [ dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: odoo
      DB_PASSWORD: odoo

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
          POSTGRES_DB: odoo
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential python3-dev libldap2-dev \
            libsasl2-dev libssl-dev postgresql-client

      # - name: Wait for Postgres to be ready
      #   run: |
      #     for i in {1..60}; do  # Intentaremos 60 veces (1 minuto de espera total)
      #       if pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER > /dev/null 2>&1; then
      #         echo "Postgres is up"
      #         exit 0
      #       else
      #         echo "Attempt $i: PostgreSQL is not ready yet"
      #       fi
      #       sleep 1
      #     done
      #     echo "Postgres did not become ready in time" >&2
      #     exit 1

      # - name: Print PostgreSQL logs
      #   if: failure()
      #   run: |
      #     docker ps
      #     docker logs $(docker ps -q --filter "ancestor=postgres:13")

      - name: Debug Postgres readiness
        run: |
          docker exec $(docker ps -q --filter "ancestor=postgres:13") pg_isready -h localhost -p 5432

      - name: Create root role
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          psql -h $DB_HOST -U $DB_USER -c "CREATE ROLE root WITH LOGIN SUPERUSER PASSWORD 'password';"

      - name: Create test database
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          psql -h $DB_HOST -U $DB_USER -c "CREATE DATABASE test_db;"

      - name: Install Python deps
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install -e .

      - name: Read test modules
        id: read_modules
        run: |
          echo "modules_to_test=$(python3 - <<EOF
          import json
          print(','.join(json.load(open('test_modules.json'))['modules']))
          EOF
          )" >> $GITHUB_OUTPUT

      - name: Install ONLY custom addon (and deps)
        run: |
          ./odoo-bin \
            --addons-path=odoo/odoo/addons,custom_addons \
            -d test_db \
            --db_host=$DB_HOST --db_user=$DB_USER --db_password=$DB_PASSWORD \
            --stop-after-init \
            -i ${{ steps.read_modules.outputs.modules_to_test }}

      - name: Run ONLY your tests
        run: |
          ./odoo-bin \
            --addons-path=odoo/odoo/addons,custom_addons \
            -d test_db \
            --db_host=$DB_HOST --db_user=$DB_USER --db_password=$DB_PASSWORD \
            --test-enable \
            --test-tags=ci_only \
            --stop-after-init
